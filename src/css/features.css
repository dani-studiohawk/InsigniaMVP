/* wrapper holds the torn edges, text stays in an unmasked child */
.features-shell {
  position: relative;
  background-color: var(--off-white);
    z-index: 5;                 /* higher than whatever the next section uses */
}

/* your existing section stays simple */
.features-section {
  position: relative;
  padding: 3rem 20px;
  width: 100%;
  background-color: var(--off-white);
  z-index: 2;
  background-image: url('../assets/backgrounds/xJ2UjemaUO2.jpg');
  background-repeat: repeat;
  background-size: 200px;

}

.features-header-text {
  position: absolute;
  width: 300px;
  height: 80px;
  left: 50%;
  transform: translateX(-50%);
  top: 0;
  z-index: 3;
  display: flex;
  align-items: center;
  justify-content: center;
}

.features-header-container {
  position: relative;
  width: 300px;
  height: 80px;
  margin: 0 auto 50px auto;
}

/* Features box built from pixel sprites, with exact scaling */
.features-header{
  /* base asset sizes, in source pixels */
  --corner-base: 12px;
  --edge-base: 3px;
  --orn-top-base: 11px;
  --orn-btm-w-base: 13px;
  --orn-btm-h-base: 3px;

  /* scale factor */
  --scale: 4;

  /* derived sizes */
  --corner: calc(var(--corner-base) * var(--scale));
  --edge: calc(var(--edge-base) * var(--scale));
  --orn-top: calc(var(--orn-top-base) * var(--scale));
  --orn-btm-w: calc(var(--orn-btm-w-base) * var(--scale));
  --orn-btm-h: calc(var(--orn-btm-h-base) * var(--scale));


  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: 0;
  width: 300px; 
  height: 80px;                /* demo width; remove if fluid */
  image-rendering: pixelated;

  /* padding equals edge thickness, so content sits inside the frame */
  padding: calc(16px + var(--edge)) 20px calc(14px + var(--edge));
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;

  /* Apply filter to frame corners */

  /* multiple backgrounds: 4 corners + 4 edges */
  background-image:
    url("../assets/backgrounds/framecorner-tl.svg"),
    url("../assets/backgrounds/framecorner-tr.svg"),
    url("../assets/backgrounds/framecorner-bl.svg"),
    url("../assets/backgrounds/framecorner-br.svg");

  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat,
                     no-repeat, no-repeat, no-repeat, no-repeat;

  /* corners */
  background-position:
    left top,
    right top,
    left bottom,
    right bottom,

    /* edges start after the corners */
    left var(--corner) top,                 /* top    */
    left var(--corner) bottom,              /* bottom */
    left top var(--corner),                 /* left   */
    right top var(--corner);                /* right  */

  background-size:
    var(--corner) var(--corner),
    var(--corner) var(--corner),
    var(--corner) var(--corner),
    var(--corner) var(--corner),

    /* horizontal edges: full width minus both corners, thickness = var(--edge) */
    calc(100% - (var(--corner) * 2)) var(--edge),
    calc(100% - (var(--corner) * 2)) var(--edge),

    /* vertical edges: full height minus both corners */
    var(--edge) calc(100% - (var(--corner) * 2)),
    var(--edge) calc(100% - (var(--corner) * 2));

}

/* heading text stays above ornaments */
.features-header-text h2{
  position: relative;
  z-index: 1;
  text-align: center;
  font-family: var(--font-family-secondary);
  font-size: 2rem;
  text-transform: uppercase;
  color: #26284c;
  font-weight: 800;
  letter-spacing: 1px;
}

/* Left and right lines as separate elements to avoid filter effect */
.features-header-lines {
  position: absolute;
  width: 300px;
  height: 80px;
  left: 50%;
  transform: translateX(-50%);
  top: 0;
  z-index: 2;
  pointer-events: none;
}

.features-line-left {
  position: absolute;
  left: -426px;
  top: 50%;
  transform: translateY(-50%);
  width: 426px;
  height: 4px;
  background-color: var(--gold);
}

.features-line-right {
  position: absolute;
  right: -426px;
  top: 50%;
  transform: translateY(-50%);
  width: 426px;
  height: 4px;
  background-color: var(--gold);
}

/* Ornaments as separate elements to apply filter independently */
.features-header-ornaments {
  position: absolute;
  width: 300px;
  height: 80px;
  left: 50%;
  transform: translateX(-50%);
  top: 0;
  z-index: 1;
  pointer-events: none;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  image-rendering: -moz-crisp-edges;
  
  /* Include CSS variables for ornament sizing */
  --corner-base: 12px;
  --edge-base: 3px;
  --orn-top-base: 11px;
  --orn-btm-w-base: 13px;
  --orn-btm-h-base: 3px;
  --scale: 4;
  --corner: calc(var(--corner-base) * var(--scale));
  --edge: calc(var(--edge-base) * var(--scale));
  --orn-top: calc(var(--orn-top-base) * var(--scale));
  --orn-btm-w: calc(var(--orn-btm-w-base) * var(--scale));
  --orn-btm-h: calc(var(--orn-btm-h-base) * var(--scale));
}

.features-ornament-top {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: -36px;
  width: var(--orn-top);
  height: var(--orn-top);
  background: url("../assets/backgrounds/framemiddle.svg") center/contain no-repeat;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  image-rendering: -moz-crisp-edges;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.features-ornament-bottom {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: calc(-1 * var(--orn-btm-h) / 2);
  width: var(--orn-btm-w);
  height: var(--orn-btm-h);
  background: url("../assets/backgrounds/framemiddle-bottom.svg") center/contain no-repeat;
  image-rendering: pixelated;
}






/* torn edges as siblings so they do not affect text AA */
.features-tear {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100px;
  background-image: url('../assets/backgrounds/xJ2UjemaUO2.jpg');
  background-repeat: repeat;
  background-size: 200px;
  mask-image: url('../assets/images/tear.svg');
  mask-repeat: repeat-x;
  mask-size: auto 100%;
  mask-position: centre;
  z-index: 0;
}
.features-tear--top { top: -40px; }
.features-tear--bottom { bottom: -40px; transform: scaleY(-1); }



.card-grid {
  position: relative;
  z-index: 3;
  display: grid;
  grid-template-columns: 1fr; /* Single column by default - mobile */
  gap: 2rem;
  width: min(1152px, 85%);
  margin: 0 auto;
  justify-content: center;
  align-items: stretch;
}

/* Medium screens and up - 2x2 grid */
@media (min-width: 768px) {
  .card-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1.5rem;
  }
}

/* small typography clean-ups */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* outer card box – no ornate border here */
.card-content {
  background-color: rgb(255, 247, 233);
  box-shadow: 0 8px 8px -4px rgba(79, 62, 33, 0.223);
  display: flex;
  flex-direction: column;
  height: 100%;
  /* no border, no padding */
}

/* draws the border and insets it away from the edges */
.card-inner {

  margin: 10px;                     /* controls the inset */
  border: clamp(8px, 1.5vw, 14px) solid transparent;  /* style is required */
  border-image: url('../assets/images/filagree-border.svg')
                14 / clamp(8px, 1.5vw, 14px);
  border-image-repeat: stretch;                        /* or round if needed */
  display: flex;
  flex-direction: column;
  flex: 1;
  color: var(--gold); /* <-- this changes the SVG border colour */
  padding-bottom: 20px;
}


.card h2 {
  text-align: center;
  font-family: var(--font-family);
  font-style: bold;
  font-size: clamp(1.2rem, 3vw, 1.5rem); /* Responsive font size - reduced */
  font-weight: bold;
  margin: 10px 0 5px;
  color: var(--secondary-color);
}

.card p {
  font-weight: 500;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-align: center;
  font-family: var(--font-family);
  font-size: clamp(0.8rem, 1.5vw, 0.9rem); /* Responsive font size - reduced */
  line-height: 1.5;
  margin: 0.5vw;
  padding: 0vw 1.5vw;
  color: var(--secondary-color);
  flex-grow: 1;
}

/* Feature Gallery Component (used in feature cards) */
.feature-gallery {
  position: relative;
  width: 100%;
  margin: 0 auto;
  height: auto;
  overflow: hidden;
  padding-bottom: 28px;   /* ≈ diamond height + a little gap */
}

.feature-gallery-container {
  position: relative;
  width: 100%;
  height: auto;
  display: flex;
  transition: transform 0.3s ease-in-out;
  -webkit-user-select: none;
  user-select: none;
  touch-action: pan-y pinch-zoom;
}

.feature-gallery img {
  width: 100%;
  height: auto;
  flex-shrink: 0;
}

.feature-gallery-nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.5);
  color: white;
  padding: 0.5rem;
  cursor: pointer;
  border: none;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 2;
  -webkit-tap-highlight-color: transparent;
}

.feature-gallery:hover .feature-gallery-nav {
  opacity: 1;
}

.feature-gallery-nav.prev {
  left: 10px;
}

.feature-gallery-nav.next {
  right: 10px;
}

/* Diamond navigation */
.diamond-nav {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 3;
  width: auto;
  height: auto;
}

.diamond-indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 15px;
  width: 80px;
  gap: 12px;
  background: transparent;
  border: none;
}

.diamond-dot {
  width: 8px;
  height: 8px;
  background-color: var(--secondary-color);
  -webkit-mask-image: url('../assets/images/diamond-2.svg');
  -webkit-mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-image: url('../assets/images/diamond-2.svg');
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
  transition: all 0.3s ease;
  pointer-events: auto;
  cursor: pointer;
}

.diamond-dot.active {
  background-color: var(--gold);
  transform: scale(2);
}

/* Mobile adjustments for feature gallery */
@media (max-width: 720px) {
  .feature-gallery-nav {
    opacity: 1;
    background: rgba(0, 0, 0, 0.3);
    width: 40px;
    height: 40px;
    font-size: 1.2rem;
  }

  .feature-gallery-nav.prev {
    left: 5px;
  }

  .feature-gallery-nav.next {
    right: 5px;
  }

  .diamond-indicator {
    height: 25px;
    width: 70px;
    gap: 10px;
  }

  .diamond-dot {
    width: 8px;
    height: 8px;
  }
}

/* Touch device optimizations for feature gallery */
@media (hover: none) {
  .feature-gallery-nav {
    opacity: 1;
    -webkit-backdrop-filter: blur(2px);
    backdrop-filter: blur(2px);
  }
  
  .diamond-dot {
    position: relative;
    width: 12px;
    height: 12px;
    /* Larger touch target */
  }
  
  .diamond-dot::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 44px; /* Minimum touch target size */
    height: 44px;
    background: transparent;
  }
}

/* Swoosh textures */
.swoosh {
  position: absolute;
  background-image: url('../assets/images/swoosh.svg');
  background-size: contain;
  background-repeat: no-repeat;
  opacity: 0.1;
  z-index: 0;
  width: 1000px;
  height: 800px;
}

.features-swoosh-1 {
  top: 5%;
  left: 60%;
  transform: translateX(-25%);
}

.features-swoosh-2 {
  top: 35%;
  left: 40%;
  transform: translateX(-55%) scaleY(-1);
}
